# options.addOption(option("v", "version", "cmd.deploy.opt.version"));
cmd.deploy.opt.version = Prints the OpenEJB version and exits.

# options.addOption(option("h", "help", "cmd.deploy.opt.help"));
cmd.deploy.opt.help = Lists these options and exit.

# options.addOption(option("o", "offline", "cmd.deploy.opt.offline"));
cmd.deploy.opt.offline = Deploys the app to an offline server by copying the archive into the server's apps/ directory.  The app will be deployed when the server is started.  The default is online.

# options.addOption(option("s", "server-url", "url", "cmd.deploy.opt.server"));
cmd.deploy.opt.server = Sets the url of the OpenEJB server to which the app will be deployed.  The value should be the same as the JNDI Provider URL used to lookup EJBs.  The default is 'ejbd://localhost:4201'.

# options.addOption(option("d", "debug", "cmd.deploy.opt.debug"));
cmd.deploy.opt.debug = Increases the level of detail on validation errors and deployment summary.

# options.addOption(option("q", "quiet", "cmd.deploy.opt.quiet"));
cmd.deploy.opt.quiet = Decreases the level of detail on validation and skips the deployment summary.

# options.addOption(option(null, "dir", "cmd.deploy.opt.dir"));
cmd.deploy.opt.dir = Sets the destination directory where the app will be deployed.  The default is {openejb.base}/apps/ directory.  Note when changing this setting make sure the directory is listed in the openejb.xml via a <Deployments dir=""/> tag or the app will not be picked up again on restart.

# System.out.println(messages.format("cmd.deploy.serverOffline"));
cmd.deploy.serverOffline =  The server is offline or not contactable at the configured address.  Either start the server or try deployment again in --offline mode.

# System.out.println(messages.format("cmd.deploy.offline", path, destFile.getAbsolutePath()));
cmd.deploy.offline =  The application '{0}' has been copied to the directory '{1}' and will be loaded when the server starts.

# System.out.println(messages.format("cmd.deploy.successful", path, appInfo.jarPath));
cmd.deploy.successful =  Application deployed successfully at '{0}'

# System.out.println(messages.format("cmd.deploy.validationFailed", path));
cmd.deploy.validationFailed = Application did not pass validation: {0}

# System.out.println(messages.format("cmd.deploy.failed", path));
cmd.deploy.failed = Application failed to deploy '{0}'.  Check server logs for more details.

# throw new DeploymentTerminatedException(messages.format("cmd.deploy.fileNotFound", file.getAbsolutePath()));
cmd.deploy.fileNotFound = Archive does not exist: {0}

# throw new DeploymentTerminatedException(messages.format("cmd.deploy.destExists", file.getAbsolutePath(), destFile.getAbsolutePath()));
cmd.deploy.destExists = Application already deployed at '{1}'

# throw new DeploymentTerminatedException(messages.format("cmd.deploy.cantCopy", file.getAbsolutePath(), destFile.getAbsolutePath()));
cmd.deploy.cantCopy = Unable to copy application to '{1}'.  Check that the directory is writable and that there is enough disk space.
<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans default-lazy-init="true"
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <context:annotation-config/>

    <bean name="OpenEJB" class="org.apache.openejb.spring.OpenEJB">
        <property name="containers">
            <list>
                <bean class="org.apache.openejb.spring.SingletonContainer">
                    <property name="id" value="Spring Defined SingletonContainer"/>
                    <property name="accessTimeout" value="45 sec"/>
                </bean>
                <bean class="org.apache.openejb.spring.StatelessContainer">
                    <property name="id" value="Spring Defined StatelessContainer"/>
                    <property name="poolSize" value="50"/>
                </bean>
                <bean class="org.apache.openejb.spring.StatefulContainer">
                    <property name="id" value="Spring Defined StatefulContainer"/>
                    <property name="poolSize" value="50"/>
                </bean>
                <bean class="org.apache.openejb.spring.MdbContainer">
                    <property name="id" value="Spring Defined MdbContainer"/>
                    <property name="resourceAdapter" value="Spring Defined JMS Resource Adapter"/>
                    <property name="instanceLimit" value="50"/>
                </bean>
                <bean class="org.apache.openejb.spring.BmpContainer">
                    <property name="id" value="Spring Defined BmpContainer"/>
                    <property name="poolSize" value="50"/>
                </bean>
                <bean class="org.apache.openejb.spring.CmpContainer">
                    <property name="id" value="Spring Defined CmpContainer"/>
                </bean>
            </list>
        </property>
        <property name="resources">
            <list>
                <bean class="org.apache.openejb.spring.Resource">
                    <property name="id" value="Spring Defined JMS Resource Adapter"/>
                    <property name="type" value="ActiveMQResourceAdapter"/>
                    <property name="properties">
                        <props>
                            <prop key="BrokerXmlConfig">broker:(tcp://localhost:61616)?useJmx=false</prop>
                            <prop key="ServerUrl">vm://localhost?async=true</prop>
                        </props>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- Spring declared TransactionManager which is automatically imported -->
    <bean name="tm" class="org.apache.openejb.spring.MockTransactionManager"/>

    <!-- Spring declared SecurityService which is automatically imported -->
    <bean name="sec" class="org.apache.openejb.spring.MockSecurityService"/>

    <!-- Spring declared DataSource which is imported into OpenEJB -->
    <bean id="ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:file:data/hsqldb/hsqldb"/>
        <property name="username" value="sa"/>
    </bean>

    <!-- An Application containing all EJBs in the classloader -->
    <bean name="classPathApplication" class="org.apache.openejb.spring.Application">
        <property name="openEJB" ref="OpenEJB"/>
    </bean>

    <!-- Deploys the classPathApplication, the EchoBean and return a proxy -->
    <bean name="EchoBean" class="org.apache.openejb.spring.EJB">
        <property name="application" ref="classPathApplication"/>
        <property name="deploymentId" value="EchoBean"/>
        <property name="interface" value="org.apache.openejb.spring.Echo"/>
    </bean>

    <!-- DataSource exported from OpenEJB -->
    <bean id="openejbDS" class="org.apache.openejb.spring.OpenEJBDataSource" depends-on="OpenEJB">
        <property name="resourceId" value="ds"/>
    </bean>
</beans>
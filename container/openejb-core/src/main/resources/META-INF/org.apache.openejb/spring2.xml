<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!--<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">-->
<beans xmlns:o="http://openejb.apache.org/schemas/core">

  <bean id="proxyFactory" class="org.apache.openejb.util.proxy.Jdk13ProxyFactory" init-method="start"/>

  <o:containerSystem id="containerSystem"/>

  <bean id="jndiContext" factory-bean="containerSystem" factory-method="getJNDIContext"/>

  <o:transactionManagerWrapper id="transactionManager">
    <o:transactionManager>
      <o:pseudoTransactionService/>
    </o:transactionManager>
  </o:transactionManagerWrapper>

  <o:userTransaction id="userTransaction" transactionManager="#transactionManager"/>

  <o:pseudoSecurityService id="securityService"/>

  <o:sharedLocalConnectionManager id="defaultConnectionManager"
      transactionManager="#transactionManager"/>

  <o:jdbcConnectionFactory id="defaultJdbcDatabase"
      defaultUserName="admin"
      defaultPassword="pass"
      url="jdbc:derby:derbyDB;create=true"
      driver="org.apache.derby.jdbc.EmbeddedDriver"/>

  <!--<o:jdbcConnectionFactory id="defaultJdbcDatabase"-->
      <!--defaultUserName="Admin"-->
      <!--defaultPassword="pass"-->
      <!--url="jdbc:idb:conf/instantdb.properties"-->
      <!--driver="org.enhydra.instantdb.jdbc.idbDriver"/>-->

  <o:jndiBinding id="jndiBinding" context="#jndiContext">
    <property name="bindings">
      <map>
        <entry key="java:openejb/Connector/Default JDBC Database">
          <o:connectorRef manager="#defaultConnectionManager" factory="#defaultJdbcDatabase"/>
        </entry>
        <entry key="java:openejb/TransactionManager" value-ref="transactionManager"/>
        <entry key="java:openejb/SecurityService" value-ref="securityService"/>
      </map>
    </property>
  </o:jndiBinding>

  <!-- ######################### -->
  <!-- Deployment Specific Beans -->
  <!-- ######################### -->

  <o:urlClassLoader id="classLoader">
    <o:urls>
      <o:url>file:foo/bar</o:url>
    </o:urls>
  </o:urlClassLoader>

  <o:cmpContainer id="Default CMP Container" depends-on="jndiBinding">
    id=Default CMP Container

    #cmpEngineFactory org.apache.openejb.alt.containers.castor_cmp11.CastorCmpEngineFactory
    cmpEngineFactory org.apache.openejb.core.cmp.jpa.JpaCmpEngineFactory

    engine derby
    #engine instantdb

    connectorName Default JDBC Database

    transactionManager #transactionManager
    securityService #securityService
    <o:registry>
      <o:addDeployments from="#deployments1" to="Default CMP Container"/>
    </o:registry>
  </o:cmpContainer>

  <!--
  # ==========================================================
  # Default Bean-Managed Persistence EntityBean Container
  # ==========================================================
  -->
  <o:bmpContainer id="Default BMP Container">
    id Default BMP Container

    # Specifies the size of the bean pools for this
    # bmp entity container.

    poolSize 10

    transactionManager #transactionManager
    securityService #securityService

    <o:registry>
      <o:addDeployments from="#deployments1" to="Default BMP Container"/>
    </o:registry>
  </o:bmpContainer>


  <!--
  # ==========================================================
  # Default Stateless SessinBean Container
  # ==========================================================
  -->
  <o:statelessContainer id="Default Stateless Container">
    id Default Stateless Container

    # Specifies the time to wait between invocations. This
    # value is measured in milliseconds. A value of 5 would
    # result in a time-out of 5 milliseconds between invocations.
    # A value of zero would mean no timeout.

    timeOut 0

    # Specifies the size of the bean pools for this
    # stateless SessionBean container.

    poolSize 10

    # StrictPooling tells the container what to do when the pool
    # reaches it's maximum size and there are incoming requests
    # that need instances.
    #
    # With strict pooling, requests will have to wait for instances
    # to become available. The pool size will never grow beyond the
    # the set PoolSize value.
    #
    # Without strict pooling, the container will create temporary
    # instances to meet demand. The instances will last for just one
    # method invocation and then are removed.

    strictPooling true

    transactionManager #transactionManager
    securityService #securityService

    <o:registry>
      <o:addDeployments from="#deployments1" to="Default Stateless Container"/>
    </o:registry>
  </o:statelessContainer>


  <!--
  # ==========================================================
  # Default Stateful SessinBean Container
  # ==========================================================
  -->
  <o:statefulContainer id="Default Stateful Container">
    id Default Stateful Container

    # The passivator is responsible for writing beans to disk
    # at passivation time. Different passivators can be used
    # by setting this property to the fully qualified class name
    # of the PassivationStrategy implementation. The passivator
    # is not responsible for invoking any callbacks or other
    # processing, its only responsibly is to write the bean state
    # to disk.
    #
    # Known implementations:
    # org.apache.openejb.core.stateful.RAFPassivater
    # org.apache.openejb.core.stateful.SimplePassivater

    passivator org.apache.openejb.core.stateful.SimplePassivater

    # Specifies the time to wait between invocations. This
    # value is measured in minutes. A value of 5 would
    # result in a time-out of 5 minutes between invocations.

    timeOut 20

    # Specifies the size of the bean pools for this
    # stateful SessionBean container.

    poolSize 100

    # Property name that specifies the number of instances
    # to passivate at one time when doing bulk passivation.

    bulkPassivate 50

    transactionManager #transactionManager
    securityService #securityService
    <o:registry>
      <o:addDeployments from="#deployments1" to="Default Stateful Container"/>
    </o:registry>
  </o:statefulContainer>

  <o:deployments id="deployments1" classpath="#classLoader" transactionManager="#transactionManager" assembly="#assembly"/>
  <o:assembly id="assembly"/>

</beans>
